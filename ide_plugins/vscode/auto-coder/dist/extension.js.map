{"version":3,"file":"extension.js","mappings":"swBAEA,kBAIA,oBAAyBA,GAIxBC,QAAQC,IAAI,+DAKZ,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,4BAA6BC,IAC7E,MAAMC,EAAWD,EAAIE,OAEfC,EAAYN,EAAOO,OAAOD,UAChC,IAAIE,EAGHA,EADwB,IAArBF,EAAUG,OACFT,EAAOO,OAAOG,iBAEdJ,EAAU,GAGtBE,EAASG,OACTH,EAASI,SAAS,qBAAqBR,IAAW,IAGnDR,EAAQiB,cAAcC,KAAKf,EAC5B,EAGA,wBAA8B,C,UCnC9BgB,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://auto-coder-copilot/./src/extension.ts","webpack://auto-coder-copilot/external commonjs \"vscode\"","webpack://auto-coder-copilot/webpack/bootstrap","webpack://auto-coder-copilot/webpack/startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"auto-coder\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('auto-coder.runInTerminal', (uri) => {\n\t\tconst filePath = uri.fsPath;\n\t\t\n\t\tconst terminals = vscode.window.terminals;\n\t\tlet terminal;\n\n\t\tif (terminals.length === 0) {\n\t\t\tterminal = vscode.window.createTerminal();\n\t\t} else {\n\t\t\tterminal = terminals[0];\n\t\t}\n\t\t\n\t\tterminal.show();\n\t\tterminal.sendText(`auto-coder --file ${filePath}`);\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","console","log","disposable","vscode","commands","registerCommand","uri","filePath","fsPath","terminals","window","terminal","length","createTerminal","show","sendText","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}