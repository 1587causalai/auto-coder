{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://auto-coder-copilot/./src/extension.ts","webpack://auto-coder-copilot/external commonjs \"fs\"","webpack://auto-coder-copilot/external commonjs \"js-yaml\"","webpack://auto-coder-copilot/external commonjs \"vscode\"","webpack://auto-coder-copilot/external node-commonjs \"path\"","webpack://auto-coder-copilot/webpack/bootstrap","webpack://auto-coder-copilot/webpack/startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport path = require('path');\nimport fs = require('fs');\nimport yaml = require('js-yaml');\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"auto-coder\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('auto-coder.runInTerminal', (uri) => {\n\t\tconst filePath = uri.fsPath;\n\n\t\tconst workspaceFolders = vscode.workspace.workspaceFolders;\n\t\tlet projectRoot;\n\t\tif (workspaceFolders) {\n\t\t\tprojectRoot = workspaceFolders[0].uri.fsPath;\n\t\t}\n\n\t\tconst terminals = vscode.window.terminals;\n\t\tlet terminal;\n\n\t\tif (terminals.length === 0) {\n\t\t\tterminal = vscode.window.createTerminal();\n\t\t} else {\n\t\t\tterminal = terminals[0];\n\t\t}\n\n\t\tterminal.show();\n\n\t\tif (projectRoot) {\n\t\t\tterminal.sendText(`cd ${projectRoot}`);\n\t\t}\n\n\t\tterminal.sendText(`auto-coder --file ${filePath}`);\n\t});\n\n\tcontext.subscriptions.push(disposable);\n\n\tlet createRequirementDisposable = vscode.commands.registerCommand('auto-coder.createRequirement', async (uri) => {\n\t\tconst workspaceFolders = vscode.workspace.workspaceFolders;\n\t\tif (!workspaceFolders) {\n\t\t\tvscode.window.showErrorMessage('请先打开一个工作区');\n\t\t\treturn;\n\t\t}\n\t\tconst projectRoot = workspaceFolders[0].uri.fsPath;\n\t\tconst autoCorderDir = path.join(projectRoot, '.auto-coder');\n\t\tif (!fs.existsSync(autoCorderDir)) {\n\t\t\tconst action = await vscode.window.showErrorMessage(\n\t\t\t\t'当前工作区尚未初始化auto-coder项目,是否立即初始化?',\n\t\t\t\t'立即初始化'\n\t\t\t);\n\t\t\tif (action === '立即初始化') {\n\t\t\t\tvscode.commands.executeCommand('auto-coder.initProject');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n        \n\t\tconst baseConfigFile = path.join(projectRoot, 'actions', 'base', 'base.yml');\n\t\tlet model, embModel;\n\t\t\n\t\tif (fs.existsSync(baseConfigFile)) {\t\t\t\n\t\t\tconst baseConfig = yaml.load(fs.readFileSync(baseConfigFile, 'utf8')) as Record<string, unknown>;\n\t\t\tmodel = baseConfig?.model as string;\n\t\t\tembModel = baseConfig?.emb_model as string;\n\t\t}\n\n\t\tconst requirement = await vscode.window.showInputBox({\n\t\t\tplaceHolder: '请输入需求',\n\t\t\tprompt: '需求'\n\t\t});\n\n\t\tif (!requirement) {\n\t\t\treturn;\n\t\t}\n        \n\t\tif (!model) {\n\t\t\tmodel = await vscode.window.showInputBox({\n\t\t\t\tplaceHolder: '请输入模型名',\n\t\t\t\tprompt: '模型名'\n\t\t\t});\n\t\t}\n\n\t\tif (!embModel) {\n\t\t\tembModel = await vscode.window.showInputBox({\n\t\t\t\tplaceHolder: '请输入向量模型名',\n\t\t\t\tprompt: '向量模型名'\n\t\t\t});\n\t\t}\t\n\n\t\tif (requirement && model && embModel) {\n\t\t\tconst workspaceFolders = vscode.workspace.workspaceFolders;\n\t\t\tlet projectRoot;\n\t\t\tif (workspaceFolders) {\n\t\t\t\tprojectRoot = workspaceFolders[0].uri.fsPath;\n\t\t\t}\n\n\t\t\tconst terminals = vscode.window.terminals;\n\t\t\tlet terminal;\n\n\t\t\tif (terminals.length === 0) {\n\t\t\t\tterminal = vscode.window.createTerminal();\n\t\t\t} else {\n\t\t\t\tterminal = terminals[0];\n\t\t\t}\n\n\t\t\tterminal.show();\n\t\t\tif (projectRoot) {\n\t\t\t\tterminal.sendText(`cd ${projectRoot}`);\n\t\t\t}\n\t\t\tterminal.sendText(`auto-coder agent planner --model ${model} --emb_model ${embModel} --query \"${requirement}\"`);\n\t\t}\n\t});\n\n\tcontext.subscriptions.push(createRequirementDisposable);\n\n\tlet initProjectDisposable = vscode.commands.registerCommand('auto-coder.initProject', async (uri) => {\n\t\tconst workspaceFolders = vscode.workspace.workspaceFolders;\n\t\tlet projectRoot;\n\t\tif (workspaceFolders) {\n\t\t\tprojectRoot = workspaceFolders[0].uri.fsPath;\n\t\t}\n\n\t\tconst terminals = vscode.window.terminals;\n\t\tlet terminal;\n\n\t\tif (terminals.length === 0) {\n\t\t\tterminal = vscode.window.createTerminal();\n\t\t} else {\n\t\t\tterminal = terminals[0];\n\t\t}\n\n\t\tterminal.show();\n\t\tif (projectRoot) {\n\t\t\tterminal.sendText(`cd ${projectRoot}`);\n\t\t}\n\t\tterminal.sendText('auto-coder init --source_dir .');\n\t});\n\n\tcontext.subscriptions.push(initProjectDisposable);\n}\n\n\nexport function deactivate() { }\n","module.exports = require(\"fs\");","module.exports = require(\"js-yaml\");","module.exports = require(\"vscode\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","console","log","disposable","vscode","commands","registerCommand","uri","filePath","fsPath","workspaceFolders","workspace","projectRoot","terminals","window","terminal","length","createTerminal","show","sendText","subscriptions","push","createRequirementDisposable","async","showErrorMessage","autoCorderDir","path","join","fs","existsSync","executeCommand","baseConfigFile","model","embModel","baseConfig","yaml","load","readFileSync","emb_model","requirement","showInputBox","placeHolder","prompt","initProjectDisposable","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}