(()=>{"use strict";var e={265:function(e,t,o){var r=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,r,n)}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&r(t,e,o);return n(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.deactivate=t.activate=void 0;const a=s(o(398)),i=o(928),c=o(383),d=o(89);t.activate=function(e){console.log('Congratulations, your extension "auto-coder" is now active!');let t=a.commands.registerCommand("auto-coder.runInTerminal",(e=>{const t=e.fsPath,o=a.workspace.workspaceFolders;let r;o&&(r=o[0].uri.fsPath);const n=a.window.terminals;let s;s=0===n.length?a.window.createTerminal():n[0],s.show(),r&&s.sendText(`cd ${r}`),s.sendText(`auto-coder --file ${t}`)}));e.subscriptions.push(t);let o=a.commands.registerCommand("auto-coder.createRequirement",(async e=>{const t=a.workspace.workspaceFolders;if(!t)return void a.window.showErrorMessage("请先打开一个工作区");const o=t[0].uri.fsPath,r=i.join(o,".auto-coder");if(!c.existsSync(r))return void("立即初始化"===await a.window.showErrorMessage("当前工作区尚未初始化auto-coder项目,是否立即初始化?","立即初始化")&&a.commands.executeCommand("auto-coder.initProject"));const n=i.join(o,"actions","base","base.yml");let s,u;if(c.existsSync(n)){const e=d.load(c.readFileSync(n,"utf8"));s=e?.model,u=e?.emb_model}const l=await a.window.showInputBox({placeHolder:"请输入需求",prompt:"需求"});if(l&&(s||(s=await a.window.showInputBox({placeHolder:"请输入模型名",prompt:"模型名"})),u||(u=await a.window.showInputBox({placeHolder:"请输入向量模型名",prompt:"向量模型名"})),l&&s&&u)){const e=a.workspace.workspaceFolders;let t;e&&(t=e[0].uri.fsPath);const o=a.window.terminals;let r;r=0===o.length?a.window.createTerminal():o[0],r.show(),t&&r.sendText(`cd ${t}`),r.sendText(`auto-coder agent planner --model ${s} --emb_model ${u} --query "${l}"`)}}));e.subscriptions.push(o);let r=a.commands.registerCommand("auto-coder.initProject",(async e=>{const t=a.workspace.workspaceFolders;let o;t&&(o=t[0].uri.fsPath);const r=a.window.terminals;let n;n=0===r.length?a.window.createTerminal():r[0],n.show(),o&&n.sendText(`cd ${o}`),n.sendText("auto-coder init --source_dir .")}));e.subscriptions.push(r);let n=a.commands.registerCommand("auto-coder.createYaml",(async e=>{const t=a.workspace.workspaceFolders;if(!t)return void a.window.showErrorMessage("请先打开一个工作区");const o=t[0].uri.fsPath,r=i.join(o,".auto-coder");if(!c.existsSync(r))return void("立即初始化"===await a.window.showErrorMessage("当前工作区尚未初始化auto-coder项目,是否立即初始化?","立即初始化")&&a.commands.executeCommand("auto-coder.initProject"));const n=await a.window.showInputBox({placeHolder:"请输入需求",prompt:"需求"});if(!n)return;const s=a.window.terminals;let d;d=0===s.length?a.window.createTerminal():s[0],d.show(),o&&d.sendText(`cd ${o}`),d.sendText(`auto-coder next "${n}"`)}));e.subscriptions.push(n)},t.deactivate=function(){}},383:e=>{e.exports=require("fs")},89:e=>{e.exports=require("js-yaml")},398:e=>{e.exports=require("vscode")},928:e=>{e.exports=require("path")}},t={},o=function o(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={exports:{}};return e[r].call(s.exports,s,s.exports,o),s.exports}(265);module.exports=o})();