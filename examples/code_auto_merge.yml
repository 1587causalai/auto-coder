source_dir: /home/winubuntu/projects/ByzerRawCopilot 
target_file: /home/winubuntu/projects/ByzerRawCopilot/output.txt 

model: qianwen_chat
model_max_length: 2000
model_max_input_length: 6000
anti_quota_limit: 5

search_engine: bing
search_engine_token: ENV {{BING_SEARCH_TOKEN}}

skip_build_index: true

project_type: py
query: |
  在合适的位置，添加一个新的类 code_auto_merge.py, 该类的主要功能是解析一段文本，然后根据解析后的结果
  修改特定路径的件。需要的解析的文本示例如下：

  ```python
  ## File: src/server/server.py

  from fastapi import FastAPI

  app = FastAPI()

  @app.get("/")
  def read_root():
      return {"message": "Hello, World!"}
  ```

  为了运行此服务，你需要在项目的主入口点（例如 `src/main.py` 或直接在终端中）启动该应用。以下是启动应用的示例：

  ```python
  ## File: src/main.py (假设你在这个文件中启动应用)

  from server.server import app

  if __name__ == "__main__":
      import uvicorn
      uvicorn.run(app, host="0.0.0.0", port=8000)
  ```

  然后在终端中运行 `python src/main.py` 来启动 web 服务。现在访问 http://localhost:8000/ 将会看到 "Hello, World!" 的消息。

  使用 codeutils.extract_code(text)  来抽取代码块，返回值是返回只是 tuple(lang,code)。然后解析代码块，得到 path 和 content， 其中 path 是代码块里面第一行以 ##File: 或者 ## File: 开头的行的后面部分.
  content 则是代码块里面除了第一行的其他行的内容。然后根据 path 和 content 修改特定路径的文件。

  另外，你也要支持一段文本里有多段 File 路径 + Code 的解析

  