{
  "/home/winubuntu/projects/ByzerRawCopilot/auto_coder.py": {
    "symbols": " 函数: parse_args, main\n类: AutoCoderArgs, Dispacher\n变量: args, config, value, llm\n导入语句: import byzerllm, from typing import List, Dict, Any, Optional, import argparse, from autocoder.common import AutoCoderArgs, from autocoder.dispacher import Dispacher, import yaml",
    "last_modified": 1710415582.1887314,
    "md5": "908783e98cb7c55da84b38bced623fff"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/setup.py": {
    "symbols": " 函数: open, exec, setup\n类: None\n变量: folder, version_path, __version__, req_path, install_requires, readme_path, readme_contents\n导入语句: os, setuptools, find_packages",
    "last_modified": 1710339475.4360106,
    "md5": "4e02680b18c3271c51c10a5202b6577d"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/auto_coder.py": {
    "symbols": "符号类型: 变量\n符号名称: lang_desc, system_lang, lang, desc\n\n符号类型: 函数\n符号名称: parse_args\n\n符号类型: 导入语句\n符号名称: \n1. import byzerllm\n2. from typing import List, Dict, Any, Optional\n3. import argparse\n4. from autocoder.common import AutoCoderArgs\n5. from autocoder.dispacher import Dispacher\n6. import yaml\n7. import locale\n8. import os\n9. from autocoder.common import git_utils\n10. from jinja2 import Template\n11. import hashlib",
    "last_modified": 1711418122.9601579,
    "md5": "5a159fcb531d00fe0044f0b4d063d152"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/version.py": {
    "symbols": "根据提供的源代码，该文件中没有函数和类定义，也没有导入语句。唯一出现的是一个变量：\n\n符号类型: 变量\n符号名称: __version__\n\n所以，按照要求的格式返回结果为：\n\n变量: __version__",
    "last_modified": 1711108603.2659726,
    "md5": "b3622ac5145d82168b82a3bf657fdba8"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/suffixproject/__init__.py": {
    "symbols": "函数:\n- `__init__`\n- `output`\n- `is_suffix_file`\n- `read_file_content`\n- `convert_to_source_code`\n- `get_source_codes`\n- `get_rest_source_codes`\n- `get_search_source_codes`\n- `run`\n- `clone_repository`\n\n类:\n- `SuffixProject`\n\n变量:\n- `args`\n- `directory`\n- `git_url`\n- `target_file`\n- `project_type`\n- `suffixs`\n- `file_filter`\n- `sources`\n- `llm`\n\n导入语句:\n- `from autocoder.common import SourceCode, AutoCoderArgs`\n- `from autocoder import common as FileUtils`\n- `from autocoder.utils.rest import HttpDoc`\n- `import os`\n- `from typing import Optional, Generator, List, Dict, Any, Callable`\n- `from git import Repo`\n- `import byzerllm`\n- `from autocoder.common.search import Search, SearchEngine`",
    "last_modified": 1711019938.481263,
    "md5": "a5da6c21ca231ebe8c62d2d0972d4cdb"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/index/index.py": {
    "symbols": "该代码定义了一个`IndexManager`类，用于管理和构建源代码索引，并通过自然语言模型（如ByzerLLM）来处理和解析代码以提取符号信息。主要功能如下：\n\n1. `IndexItem`、`TargetFile`和`FileList`为数据模型类，分别用于存储索引项、目标文件信息和文件列表。\n\n2. `IndexManager`类初始化时接收一个自然语言模型实例`llm`，源代码列表`sources`以及自动编码器参数`args`，并设置索引目录及索引文件路径。\n\n3. `_get_related_files`方法是一个装饰器函数，通过自然语言模型提示用户根据给定的索引信息和文件路径找出相关文件列表。\n\n4. `get_all_file_symbols`方法同样使用自然语言模型提示用户从指定文件的源代码中提取出函数、类、变量和导入语句等符号信息。\n\n5. `build_index`方法遍历源代码文件，计算每个文件的MD5哈希值，比较是否已存在索引中且内容未改变，如果文件有更新，则调用`get_all_file_symbols`方法获取符号信息并更新索引文件。\n\n6. `read_index`方法读取并解析索引文件，将其中的数据转换为`IndexItem`对象列表。\n\n7. `_get_meta_str`方法将索引信息分块输出，以便在与自然语言模型交互时避免一次性输入过大的数据量。\n\n8. `get_related_files`方法通过循环调用自然语言模型处理每一块索引信息，查找与给定文件路径相关的文件列表。\n\n注意：代码中缺少了`_get_target_files_by_query`方法的实现，但从上下文推测，这个方法可能也是通过自然语言模型查询索引以获取满足特定条件的目标文件列表。",
    "last_modified": 1711377637.3445458,
    "md5": "4606f05ef2ccaa48ffd45169ebae6878"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/common/JupyterClient.py": {
    "symbols": "导入语句: from jupyter_client import KernelManager\n导入语句: import threading\n导入语句: import re\n导入语句: from autocoder.common.const import *\n\n函数: clean_output\n函数: add_and_run\n函数: close\n函数: __deepcopy__\n\n类: JupyterNotebook\n\n变量: self.km\n变量: self.kc\n变量: _\n变量: outputs\n变量: error_flag\n变量: thread\n变量: msg_id\n变量: msg\n变量: msg_type\n变量: content\n变量: error_msg",
    "last_modified": 1710651958.4215846,
    "md5": "35145c780c94a7b080111fb1b89e3582"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/common/const.py": {
    "symbols": " 函数: write_denial_function, read_denial_function\n类: Class Denial\n变量: TOOLS_CODE, GUARD_CODE, CODE_INTERPRETER_SYSTEM_PROMPT\n导入语句: import numpy as np, import pandas as pd, import matplotlib.pyplot as plt, import seaborn as sns, from scipy import stats, import os, sys, import re, from datetime import datetime, from sympy import symbols, Eq, solve, import torch, import requests, from bs4 import BeautifulSoup, import json, import math, import yfinance, import time",
    "last_modified": 1710373724.2893336,
    "md5": "0ef3c5bd231599fbf376364d1297ddaa"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/dispacher/__init__.py": {
    "symbols": "函数: dispach\n类: Dispacher\n变量: args, llm, actions\n导入语句:\n1. from autocoder.common import AutoCoderArgs\n2. from autocoder.dispacher.actions.copilot import ActionCopilot\n3. from autocoder.dispacher.actions.action import ActionTranslate, ActionTSProject, ActionPyScriptProject, ActionPyProject, ActionSuffixProject\n4. import byzerllm\n5. import re",
    "last_modified": 1710471390.6673324,
    "md5": "8c522d273b533d3e036a885f6715ce6c"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/dispacher/actions/copilot.py": {
    "symbols": "函数:\n- get_execute_steps\n- get_step_num\n- get_execute_steps_for_create_project\n- execute_steps\n- get_suffix_from_project_type\n- run\n\n类:\n- UserIntent\n- RUserIntent\n- StepNum\n- ActionCopilot\n\n变量:\n- AutoCoderArgs\n- ExecuteSteps\n- ExecuteStep\n- EnvInfo\n- JupyterNotebook\n- ShellClient\n- SuffixProject\n- Search\n- SearchEngine\n- build_index_and_filter_files\n- byzerllm\n- Enum\n- pydantic\n- self.args\n- self.llm\n- self.env_info\n- self.user_intent\n\n导入语句:\n```python\nfrom autocoder.common import AutoCoderArgs, ExecuteSteps, ExecuteStep, EnvInfo, detect_env, chat_with_llm_step_by_step\nfrom autocoder.common.JupyterClient import JupyterNotebook\nfrom autocoder.common.ShellClient import ShellClient\nfrom autocoder.suffixproject import SuffixProject\nfrom autocoder.common.search import Search, SearchEngine\nfrom autocoder.index.index import build_index_and_filter_files\nfrom typing import Optional, Dict, Any, List\nimport byzerllm\nfrom enum import Enum\nimport pydantic\n```",
    "last_modified": 1710861433.8487737,
    "md5": "19aa36056c1a9eea6da98baf12501446"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/tsproject/__init__.py": {
    "symbols": "函数:\n- output\n- read_file_content\n- is_likely_useful_file\n- convert_to_source_code\n- get_source_codes\n- get_rest_source_codes\n- get_search_source_codes\n- run\n- clone_repository\n\n类:\n- TSProject\n\n变量:\n- args\n- directory\n- git_url\n- target_file\n- sources\n- llm\n\n导入语句:\n- from autocoder.common import SourceCode, AutoCoderArgs\n- from autocoder import common as FileUtils\n- from autocoder.utils.rest import HttpDoc\n- import os\n- from typing import Optional, Generator, List, Dict, Any\n- from git import Repo\n- import byzerllm\n- from autocoder.common.search import Search, SearchEngine",
    "last_modified": 1711019887.796761,
    "md5": "513677056b4c3120025f0c69c56df604"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/auto_coder.py": {
    "symbols": "函数: parse_args, main\n类: AutoCoderArgs, Dispacher\n变量: args, config, llm\n导入语句: import byzerllm, from typing import List, Dict, Any, Optional, import argparse, from autocoder.common import AutoCoderArgs, from autocoder.dispacher import Dispacher, import yaml",
    "last_modified": 1710421359.0,
    "md5": "df3b07b8446973fcbca2a8c55d189aa6"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/common/const.py": {
    "symbols": " 符号类型: 符号名称, 符号名称, ...\n1. 函数: write_denial_function, read_denial_function\n2. 类: Class Denial\n3. 变量: TOOLS_CODE, GUARD_CODE, CODE_INTERPRETER_SYSTEM_PROMPT\n4. 所有导入语句: import numpy as np, import pandas as pd, import matplotlib.pyplot as plt, import seaborn as sns, from scipy import stats, import os, import sys, import re, from datetime import datetime, from sympy import symbols, from sympy import Eq, from sympy import solve, import torch, import requests, from bs4 import BeautifulSoup, import json, import math, import yfinance, import time, os.kill, os.system, os.putenv, os.remove, os.removedirs, os.rmdir, os.fchdir, os.setuid, os.fork, os.forkpty, os.killpg, os.rename, os.renames, os.truncate, os.replace, os.unlink, os.fchmod, os.fchown, os.chmod, os.chown, os.chroot, os.fchdir, os.lchflags, os.lchmod, os.lchown, os.getcwd, os.chdir, os.popen, shutil.rmtree, shutil.move, shutil.chown, subprocess.Popen, sys.modules[\"ipdb\"], sys.modules[\"joblib\"], sys.modules[\"resource\"], sys.modules[\"psutil\"], sys.modules[\"tkinter\"]",
    "last_modified": 1710373724.0,
    "md5": "0ef3c5bd231599fbf376364d1297ddaa"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/common/ShellClient.py": {
    "symbols": " 1. 函数: `subprocess.Popen`, `communicate`, `decode`, `terminate`, `join`, `is_alive`\n2. 类: `ShellClient`\n3. 变量: `subprocess`, `threading`, `os`, `Optional`, `Tuple`, `shell`, `timeout`, `working_dir`, `env`, `stdout`, `stderr`, `self.process`\n4. 所有导入语句: `import subprocess`, `import threading`, `import os`, `from typing import Optional, Tuple`\n\n返回结果:\n函数: subprocess.Popen, communicate, decode, terminate, join, is_alive\n类: ShellClient\n变量: subprocess, threading, os, Optional, Tuple, shell, timeout, working_dir, env, stdout, stderr, self.process\n导入语句: import subprocess, import threading, import os, from typing import Optional, Tuple",
    "last_modified": 1710374192.0,
    "md5": "6a40821de4581b60ff719120de72ba16"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/common/cleaner.py": {
    "symbols": " 1. 函数: get_error_header, clean_error_msg\n2. 类: 无\n3. 变量: PYTHON_PREFIX, SITE_PKG_ERROR_PREFIX, ansi_escape\n4. 所有导入语句: import re, import os\n\n结果：\n\n函数: get_error_header, clean_error_msg\n类: 无\n变量: PYTHON_PREFIX, SITE_PKG_ERROR_PREFIX, ansi_escape\n导入语句: import re, import os",
    "last_modified": 1710373724.0,
    "md5": "f45329036b3f7b3147e4494884a5d77f"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/common/__init__.py": {
    "symbols": "函数: is_likely_useful_file, is_test_file, has_sufficient_content, remove_comments_and_docstrings, split_code_into_segments, detect_env, chat_with_llm_step_by_step\n\n类: SourceCode, TranslateReadme, Translates, TranslateArgs, ExecuteStep, ExecuteSteps, EnvInfo, AutoCoderArgs\n\n变量: 无（注：源码中定义的都是类或函数，没有独立的变量声明）\n\n导入语句:\n1. import pydantic\n2. import ast\n3. import sys\n4. import subprocess\n5. import os\n6. import time\n7. from typing import List, Dict, Any, Optional",
    "last_modified": 1710420505.0,
    "md5": "a76c25066caafdc173d58490090c2f93"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/dispacher/actions/copilot.py": {
    "symbols": "符号类型: 函数\n- get_execute_steps\n- execute_steps\n- get_suffix_from_project_type\n- run\n\n符号类型: 类\n- ActionCopilot\n\n符号类型: 变量\n- AutoCoderArgs\n- ExecuteSteps\n- ExecuteStep\n- EnvInfo\n- JupyterNotebook\n- ShellClient\n- SuffixProject\n- IndexManager\n- byzerllm\n- time\n- os\n- re\n- self.args\n- self.llm\n- self.env_info\n\n符号类型: 导入语句\n- from autocoder.common import AutoCoderArgs, ExecuteSteps, ExecuteStep, EnvInfo, detect_env, chat_with_llm_step_by_step\n- from autocoder.common.JupyterClient import JupyterNotebook\n- from autocoder.common.ShellClient import ShellClient\n- from autocoder.suffixproject import SuffixProject\n- from autocoder.index.index import IndexManager\n- from typing import Optional, Dict, Any, List\n- import byzerllm\n- import time\n- import os\n- import re",
    "last_modified": 1710418623.0,
    "md5": "23d13e1d093a60a9bdaaac791eb4b9ea"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/tsproject/__init__.py": {
    "symbols": " 函数: `output`, `read_file_content`, `is_likely_useful_file`, `convert_to_source_code`, `get_source_codes`, `run`, `clone_repository`\n\n类: `TSProject`\n\n变量: `self.directory`, `self.git_url`, `self.target_file`, `ignore_dirs`, `ignore_extensions`, `include_extensions`\n\n所有导入语句: \n1. `from autocoder.common import SourceCode`\n2. `from autocoder import common as FileUtils`\n3. `import os`\n4. `from typing import Optional,Generator,List,Dict,Any`\n5. `from git import Repo`",
    "last_modified": 1710318124.0,
    "md5": "3eb6942356ab1002ee9067729405064c"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/common/ShellClient.py": {
    "symbols": "函数: _start_output_thread, enqueue_output\n类: ShellClient\n变量: subprocess, threading, queue, os, time, self.shell, self.timeout, self.process, self.output_queue, self.error_queue, stdout_lines, stderr_lines\n导入语句: import subprocess, import threading, import queue, from typing import Optional, Tuple, import os, import time",
    "last_modified": 1710688981.8092287,
    "md5": "40825360d99ffb35dbad1d78d92d5fd2"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/common/cleaner.py": {
    "symbols": " 1. 函数: get_error_header, clean_error_msg\n2. 类: 无\n3. 变量: PYTHON_PREFIX, SITE_PKG_ERROR_PREFIX, ansi_escape\n4. 所有导入语句: import re, import os\n\n结果：\n函数: get_error_header, clean_error_msg\n变量: PYTHON_PREFIX, SITE_PKG_ERROR_PREFIX, ansi_escape\n导入语句: import re, import os",
    "last_modified": 1710373724.1453326,
    "md5": "f45329036b3f7b3147e4494884a5d77f"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/common/__init__.py": {
    "symbols": "函数:\n- is_likely_useful_file\n- is_test_file\n- has_sufficient_content\n- remove_comments_and_docstrings\n- split_code_into_segments\n- detect_env\n- chat_with_llm_step_by_step\n\n类:\n- SourceCode\n- TranslateReadme\n- Translates\n- TranslateArgs\n- ExecuteStep\n- ExecuteSteps\n- EnvInfo\n- AutoCoderArgs\n\n变量:\n(无)\n\n导入语句:\n- import pydantic\n- import ast\n- import sys\n- import subprocess\n- import os\n- import time\n- from typing import List, Dict, Any, Optional",
    "last_modified": 1710466779.6933227,
    "md5": "5ff1e108d09f8874c30fcfdda8e7c788"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/pyproject/__init__.py": {
    "symbols": "符号类型: 类, 符号名称:\n- Level1PyProject\n- PyProject\n\n符号类型: 函数, 符号名称:\n- get_imports_from_script\n- filter_imports\n- fetch_source_code\n- auto_implement\n- run\n- output\n- is_python_file\n- read_file_content\n- convert_to_source_code\n- get_package_source_codes\n- get_rest_source_codes\n- get_search_source_codes\n- get_source_codes\n\n符号类型: 变量, 符号名称:\n- script_path\n- package_name\n- imports\n- script\n- filtered_imports\n- source_code\n- instruction\n- sources\n- args\n- directory\n- git_url\n- target_file\n- llm\n\n符号类型: 导入语句, 符号名称:\n- from autocoder.common import SourceCode,AutoCoderArgs\n- from autocoder import common as FileUtils\n- from autocoder.utils.rest import HttpDoc\n- import os\n- import ast\n- import importlib\n- import byzerllm\n- import pkgutil\n- from autocoder.common.search import Search,SearchEngine",
    "last_modified": 1711019771.6915364,
    "md5": "657358b1d7f3726a1defb369036fe6cf"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/version.py": {
    "symbols": "根据提供的源码，这个文件中没有函数和类的定义，也没有导入语句。存在的符号类型是变量，具体的变量名称如下：\n\n变量: __version__\n\n所以，最终结果按照要求的格式返回为：\n\n变量: __version__",
    "last_modified": 1710421032.0,
    "md5": "fa63c57525800b14ee827d724f0e345d"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/suffixproject/__init__.py": {
    "symbols": " 函数: __init__, output, is_suffix_file, read_file_content, convert_to_source_code, get_source_codes, run, clone_repository\n类: SuffixProject\n变量: source_dir, project_type, git_url, target_file, file_filter, suffixs, sources\n导入语句: from autocoder.common import SourceCode, from autocoder import common as FileUtils, import os, from typing import Optional, Generator, List, Dict, Any, Callable, from git import Repo\n\n结果:\n函数: __init__,output,is_suffix_file,read_file_content,convert_to_source_code,get_source_codes,run,clone_repository\n类: SuffixProject\n变量: source_dir,project_type,git_url,target_file,file_filter,suffixs,sources\n导入语句: from autocoder.common import SourceCode,from autocoder import common as FileUtils,import os,from typing import Optional,Generator,List,Dict,Any,Callable,from git import Repo",
    "last_modified": 1710341076.0,
    "md5": "2c913db14a8a0b0db883a95c9f01bde9"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/pyproject/__init__.py": {
    "symbols": " 以下是从给定源码中提取的符号：\n\n函数:\n- get_imports_from_script\n- filter_imports\n- fetch_source_code\n- auto_implement\n- run\n- output\n- is_python_file\n- read_file_content\n- convert_to_source_code\n- get_source_codes\n- clone_repository\n\n类:\n- Level1PyProject\n- PyProject\n- SourceCode\n\n变量:\n- script_path\n- package_name\n- imports\n- filtered_imports\n- import_name\n- spec\n- origin\n- source_code\n- module_name\n- target_file\n- root\n- dirs\n- files\n- file_path\n\n导入语句:\n- from autocoder.common import SourceCode\n- from autocoder import common as FileUtils\n- import os\n- from typing import Optional, Generator, List, Dict, Any\n- from git import Repo\n- import ast\n- import importlib\n- import byzerllm\n\n符号类型: 函数: get_imports_from_script, 函数: filter_imports, 函数: fetch_source_code, 函数: auto_implement, 函数: run, 函数: output, 函数: is_python_file, 函数: read_file_content, 函数: convert_to_source_code, 函数: get_source_codes, 函数: clone_repository, 类: Level1PyProject, 类: PyProject, 类: SourceCode, 变量: script_path, 变量: package_name, 变量: imports, 变量: filtered_imports, 变量: import_name, 变量: spec, 变量: origin, 变量: source_code, 变量: module_name, 变量: target_file, 变量: root, 变量: dirs, 变量: files, 变量: file_path, 导入语句: from autocoder.common import SourceCode, 导入语句: from autocoder import common as FileUtils, 导入语句: import os, 导入语句: from typing import Optional, Generator, List, Dict, Any, 导入语句: from git import Repo, 导入语句: import ast, 导入语句: import importlib, 导入语句: import byzerllm",
    "last_modified": 1710333069.0,
    "md5": "95a160a26756d678880a9b5c612e8900"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/dispacher/__init__.py": {
    "symbols": " 1. 函数:\n- auto_implement_function_template\n- instruction_template\n- translate_readme\n- get_translate_part\n\n2. 类:\n- ActionTSProject\n- ActionPyScriptProject\n- ActionPyProject\n- ActionSuffixProject\n- ActionTranslate\n- Dispacher\n\n3. 变量:\n- instruction\n- content\n- args\n- llm\n- pp\n- t\n- temp_result\n- segment\n- readmes\n- filename\n- extension\n- new_file_mark\n- source\n- segments\n- temp_result\n- output\n- Chinese_filename\n\n4. 所有导入语句:\n- from autocoder.common import AutoCoderArgs, TranslateArgs, TranslateReadme, split_code_into_segments\n- from autocoder.pyproject import PyProject, Level1PyProject\n- from autocoder.tsproject import TSProject\n- from autocoder.suffixproject import SuffixProject\n- from autocoder.dispacher.actions.copilot import ActionCopilot\n- from typing import Optional\n- import byzerllm\n- import os\n- import re\n- import time",
    "last_modified": 1710393781.0,
    "md5": "eb3e39f85e787b0b75df90e45643d750"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/index/index.py": {
    "symbols": "该源码定义了一个名为`IndexManager`的类，用于管理和构建代码索引。主要功能包括：\n\n1. 初始化：初始化`IndexManager`时接收一个ByzerLLM对象（`llm`）、源代码列表（`sources`）和自动编码器参数（`AutoCoderArgs`）。同时设置索引目录和索引文件路径。\n\n2. `_get_related_files`方法：通过LLM提示用户找到与给定文件路径相关的文件，并返回一个包含目标文件信息的`FileList`模型。\n\n3. `get_all_file_symbols`方法：通过LLM提示用户从指定文件的源代码中提取特定类型的符号（函数、类、变量、导入语句），并以“符号类型: 符号名称, 符号名称, ...”格式返回结果。\n\n4. `build_index`方法：遍历源代码列表，计算每个文件的MD5哈希值并与已有的索引进行比较。如果源代码有更新或文件未被索引，则获取文件中的所有符号，并将相关信息（模块名、符号、最后修改时间、MD5值）添加到索引数据中，然后写入索引文件。\n\n5. `read_index`方法：从索引文件中读取所有已索引的文件信息，并转换为`IndexItem`模型的列表。\n\n6. `_get_meta_str`方法：将所有索引项的元数据转换为便于查询的字符串格式。\n\n7. `get_related_files`方法：根据文件路径列表调用LLM来获取相关文件列表。\n\n8. `_get_target_files_by_query`方法：通过LLM提示用户根据用户提供的查询问题找出相关的文件，返回一个包含目标文件信息的`FileList`模型。\n\n9. `get_target_files_by_query`方法：根据用户查询调用LLM来获取相关文件列表。\n\n这个类主要用于在大型代码库中构建和维护代码的符号索引，以便于通过自然语言查询快速定位相关代码文件和其中的符号信息。",
    "last_modified": 1710418478.0,
    "md5": "d0b85e6276b6e63ada8d281a7cd70d69"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/build/lib/autocoder/common/JupyterClient.py": {
    "symbols": " 1. 函数: clean_output, add_and_run, close, __deepcopy\n2. 类: JupyterNotebook\n3. 变量: outputs, error_flag\n4. 所有导入语句: from jupyter_client import KernelManager, import threading, import re, from autocoder.common.const import *",
    "last_modified": 1710373833.0,
    "md5": "8693afc1ed9106a61db821c9da0ad070"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/run.py": {
    "symbols": " 函数: main\n类: AutoCoderArgs, Dispacher, ByzerLLM\n变量: args, config, value, llm, max_output_length, extra_generation_params\n导入语句: byzerllm, typing, argparse, autocoder.common, autocoder.dispacher, yaml",
    "last_modified": 1710416973.850808,
    "md5": "a4c14c22ad743bd85ad327e265d6f616"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/dispacher/actions/action.py": {
    "symbols": "根据提供的源码，该文件定义了一些函数、类和导入语句，但没有直接提供对变量或函数、类等符号的提取逻辑。为了获取所需的符号类型（函数、类、变量和导入语句），通常需要使用Python的`ast`模块或其他类似工具来解析源代码。\n\n然而，基于现有代码，无法直接给出符号列表。若要实现这一功能，可以编写一个辅助函数，利用`ast`模块遍历并提取相关符号信息。\n\n以下是一个简化的示例，展示如何通过`ast`模块提取这些符号：\n\n```python\nimport ast\n\ndef extract_symbols_from_source(source_code: str) -> dict:\n    symbols_by_type = {\n        '函数': [],\n        '类': [],\n        '变量': [],\n        '导入语句': []\n    }\n\n    tree = ast.parse(source_code)\n\n    for node in ast.walk(tree):\n        if isinstance(node, ast.FunctionDef):\n            symbols_by_type['函数'].append(node.name)\n        elif isinstance(node, ast.ClassDef):\n            symbols_by_type['类'].append(node.name)\n        elif isinstance(node, ast.Assign) and isinstance(node.targets[0], ast.Name):\n            symbols_by_type['变量'].append(node.targets[0].id)\n        elif isinstance(node, ast.ImportFrom) or isinstance(node, ast.Import):\n            for alias in node.names:\n                if alias.asname:\n                    symbols_by_type['导入语句'].append(alias.asname)\n                else:\n                    symbols_by_type['导入语句'].append(alias.name)\n\n    for key, value in symbols_by_type.items():\n        if not value:\n            symbols_by_type[key] = \"没有任何符号\"\n\n    return symbols_by_type\n\n# 使用示例\nsource_code = open('/path/to/source.py', 'r').read()\nsymbols = extract_symbols_from_source(source_code)\nfor symbol_type, names in symbols.items():\n    print(f\"{symbol_type}: {', '.join(names)}\")\n```\n\n请注意，上述代码仅作为示例，并未在提供的源码文件中实际执行。若要在该文件中实现符号提取，需要将其整合到合适的位置，并处理可能存在的复杂情况（例如变量赋值、导入别名等）。",
    "last_modified": 1711414954.6639447,
    "md5": "9444b4a926c1d9eedd9c04ec1ccc05a0"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/common/search.py": {
    "symbols": "函数:\n- llm_rerank\n- search_with_bing\n- search_with_google\n- search_with_serper\n\n类:\n- DocWithRelevance\n- SearchEngine\n- SearchContext\n- RelatedQuestion\n\n变量:\n- BING_SEARCH_V7_ENDPOINT\n- BING_MKT\n- GOOGLE_SEARCH_ENDPOINT\n- SERPER_SEARCH_ENDPOINT\n- SEARCHAPI_SEARCH_ENDPOINT\n- REFERENCE_COUNT\n- DEFAULT_SEARCH_ENGINE_TIMEOUT\n- DEFAULT_CHOICE_SELECT_PROMPT_TMPL\n\n导入语句:\n- from typing import List, Optional\n- import httpx\n- import json\n- from loguru import logger\n- from pydantic import BaseModel, Field\n- import requests\n- from enum import Enum\n- import byzerllm\n- from langchain import PromptTemplate\n- from autocoder.utils.rest import HttpDoc",
    "last_modified": 1711019654.574174,
    "md5": "3ac92b6a38eaa6bcefb0cb176a6acebc"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/utils/rest.py": {
    "symbols": "函数:\n- `_extract_main_content`\n- `get_file_extractor`\n- `crawl_urls`\n- `clean_html_keep_text`\n\n类:\n- `HttpDoc`\n- `TextFileReader`\n\n变量:\n- `urls`\n- `llm`\n- `source_codes`\n- `document`\n- `main_content`\n- `response`\n- `html_content`\n- `tags_to_remove_completely`\n- `tag`\n- `default_file_reader_cls`\n\n导入语句:\n```python\nimport requests\nfrom bs4 import BeautifulSoup\nfrom typing import List, Dict, Type, Optional\nfrom autocoder.common import SourceCode\nimport byzerllm\nfrom loguru import logger\nimport os\nfrom pathlib import Path\nfrom llama_index.core.readers.base import BaseReader\nfrom fsspec import AbstractFileSystem\nfrom llama_index.core.schema import Document\nfrom llama_index.core.readers.file.base import get_default_fs\nfrom llama_index.readers.file import (\n    DocxReader,\n    EpubReader,\n    HWPReader,\n    ImageReader,\n    IPYNBReader,\n    MarkdownReader,\n    MboxReader,\n    PandasCSVReader,\n    PDFReader,\n    PptxReader,\n    VideoAudioReader,\n)\n```",
    "last_modified": 1711105557.4173536,
    "md5": "5cbf124dd82157ca76162c9f05a4c72a"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/common/code_auto_merge.py": {
    "symbols": "根据提供的代码，以下是所请求的符号类型和它们对应的名称列表：\n\n1. **类：**\n   - `PathAndCode`\n   - `CodeAutoMerge`\n\n2. **函数：**\n   - `__init__` （在`CodeAutoMerge`类中）\n   - `parse_text` （在`CodeAutoMerge`类中）\n   - `merge_code` （在`CodeAutoMerge`类中）\n\n3. **变量：**\n   - `parsed_blocks`\n   - `lines`\n   - `file_path`\n   - `content_lines`\n   - `total`\n   - `codes`\n   - `file_content`\n   - `md5`\n   - `file_name`\n   - `block`\n   - `f`\n\n4. **所有导入语句：**\n   - `import os`\n   - `from byzerllm.utils.client import code_utils`\n   - `from autocoder.common import AutoCoderArgs, git_utils`\n   - `from typing import List`\n   - `import pydantic`\n   - `import byzerllm`\n   - `from loguru import logger`\n   - `import hashlib`\n\n注意：变量“self.llm”和“self.args”虽在类定义中出现，但它们不是独立声明的变量，而是类实例属性。",
    "last_modified": 1711418034.9878201,
    "md5": "9a5e651bfab0a25752f727eb99ef09ee"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/utils/coder.py": {
    "symbols": "函数:\n- data_preprocess_prompt\n- image2webpage_prompt\n- get_type\n- write_plan\n- react_think\n\n类:\n- TaskTypeDef\n- TaskType\n- Thought\n- Plan\n- Coder\n\n变量:\n- AUTOCODER_ARGS_IMPORT (导入的 `AutoCoderArgs` 类型)\n- BYZERLLM_IMPORT (导入的 `byzerllm` 模块)\n- PYDANTIC_IMPORT (导入的 `pydantic` 模块)\n- ENUM_IMPORT (导入的 `Enum` 类型)\n\n导入语句:\n- from autocoder.common import AutoCoderArgs\n- import byzerllm\n- from pydantic import BaseModel\n- from enum import Enum",
    "last_modified": 1711010056.8836126,
    "md5": "97fbef061ca5f516f64888c1af23ff25"
  },
  "/home/winubuntu/projects/ByzerRawCopilot/src/autocoder/common/git_utils.py": {
    "symbols": "函数:\n- get_repo\n- commit_changes\n- get_current_branch\n- revert_changes\n\n导入语句:\n- import os\n- from git import Repo, GitCommandError\n- from loguru import logger",
    "last_modified": 1711415159.5240228,
    "md5": "9483378f3ff61a3fcb528fc4e3738acd"
  }
}