source_dir: /Users/allwefantasy/projects/auto-coder
target_file: /Users/allwefantasy/projects/auto-coder/output.txt 
project_type: py

## urls: https://docs.llamaindex.ai/en/stable/examples/query_engine/RouterQueryEngine
urls: /Users/allwefantasy/projects/auto-coder/temp_docs/RouterQueryEngine.txt

model: gpt3_5_chat
index_model: haiku_chat
emb_model: gpt_emb

index_filter_level: 1
index_model_max_input_length: 30000
# index_filter_workers: 2
# enable_rag_context: true

skip_build_index: false
execute: true
## 代码生成的时候会每次生成一个文件，现在大模型无法一次性生成太多文件，所以需要多轮生成
enable_multi_round_generate: true
auto_merge: true
human_as_model: true

query: |
   请阅读 command_args.py，simple_rag.py,common/__init__.py 三个文件的源码，我们希望实现如下的新功能：
   1. 支持 collection 的概念，collection是一个字符串，用来区分不同的索引，索引的时候，可以指定collection，查询的时候也可以指定collection。
   2. 支持 description 的概念，description是一个字符串，用来描述索引的内容,方便查询的时候，根据description来进行路由到对应的索引。
   3. 构建的时候，需要同时指定collection和description
   4. 查询的时候可以指定collections或者description，collections是一个字符串，多个collection之间用逗号分隔。如果指定了collections，那么查询的时候会遍历所有的collection,
      如果指定了description，那么查询的时候会根据description来进行路由到对应的索引。

   对应的路由实现参考： RouterQueryEngine.txt 文档里的介绍。

   下面是实现过程中的一些提示：

   在 command_args.py 中
   1. doc build 添加两个新的参数 --collection <collection>, --description=描述内容，  collection默认值为 default, description 默认值为空
   2. doc query/chat/serve 添加两个的参数 --collections <collection>， --description=描述内容， 默认值为 default,多个collection之间用逗号分隔，description 默认值为空

   AutoCoderArgs 对象同步添加 collections,collection,description 参数。
   
   simple_rag.py 可以将 self.storage_context 改成 self.storage_contexts 为一个map对象，key为collection，value为storage_context对象。
   
   




   
